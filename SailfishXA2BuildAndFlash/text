= Sailfish XA2 Build And Flash


== 构建环境

* 平台SDK（PLATFORM_SDK）
* 硬件适配构建SDK（HABUILD_SDK）


=== 设置环境变量

* VENDOR 厂商
* DEVICE 设备名

<<code bash>>
HOST $

cat <<'EOF' > $HOME/.hadk.env
export PLATFORM_SDK_ROOT="/srv/mer"
export ANDROID_ROOT="$HOME/hadk"
export VENDOR="sony"
export DEVICE="h4113"
export FAMILY="h4113"
# ARCH conflicts with kernel build
export PORT_ARCH="armv7hl"
EOF

cat <<'EOF' >> $HOME/.mersdkubu.profile
function hadk() { source $HOME/.hadk.env; echo "Env setup for $DEVICE"; }
export PS1="HABUILD_SDK [\${DEVICE}] $PS1"
hadk
EOF
<</code>>


=== Platform SDK

安装平台sdk 参考: https://sailfishos.org/wiki/Platform_SDK_Installation
<<code bash>>
HOST $

export PLATFORM_SDK_ROOT=/srv/mer
curl -k -O http://releases.sailfishos.org/sdk/installers/latest/Jolla-latest-SailfishOS_Platform_SDK_Chroot-i486.tar.bz2 ;
sudo mkdir -p $PLATFORM_SDK_ROOT/sdks/sfossdk ;
sudo tar --numeric-owner -p -xjf Jolla-latest-SailfishOS_Platform_SDK_Chroot-i486.tar.bz2 -C $PLATFORM_SDK_ROOT/sdks/sfossdk  ;
echo "export PLATFORM_SDK_ROOT=$PLATFORM_SDK_ROOT" >> ~/.bashrc
echo 'alias sfossdk=$PLATFORM_SDK_ROOT/sdks/sfossdk/mer-sdk-chroot' >> ~/.bashrc ; exec bash ;
echo 'PS1="PlatformSDK $PS1"' > ~/.mersdk.profile ;
echo '[ -d /etc/bash_completion.d ] && for i in /etc/bash_completion.d/*;do . $i;done'  >> ~/.mersdk.profile ;
sfossdk
<</code>>


<<code bash>>
HOST $

cat <<'EOF' >> $HOME/.mersdk.profile
function hadk() { source $HOME/.hadk.env; echo "Env setup for $DEVICE"; }
hadk
EOF
<</code>>

安装工具包和查看版本
<<code bash>>
PLATFORM_SDK $
sudo zypper in android-tools-hadk tar

PLATFORM_SDK $
# if no such file, you're on an old SDK version
cat /etc/os-release
<</code>>

安装平台SDK targets
<<code bash>>
Platform_SDK $

sdk-assistant create $VENDOR-$DEVICE-$PORT_ARCH Jolla-latest-Sailfish_SDK_Target-armv7hl.tar.bz2
<</code>>


=== HABUILD SDK

<<code bash>>
PLATFORM_SDK $

TARBALL=ubuntu-trusty-20180613-android-rootfs.tar.bz2
curl -O https://releases.sailfishos.org/ubu/$TARBALL
UBUNTU_CHROOT=$PLATFORM_SDK_ROOT/sdks/ubuntu
sudo mkdir -p $UBUNTU_CHROOT
sudo tar --numeric-owner -xjf $TARBALL -C $UBUNTU_CHROOT
<</code>>

ubuntu chroot
<<code bash>>
PLATFORM_SDK $

ubu-chroot -r $PLATFORM_SDK_ROOT/sdks/ubuntu
# FIXME: Hostname resolution might fail. This error can be ignored.
# Can be fixed manually by adding the hostname to /etc/hosts
<</code>>


== 构建安卓HAL

安装repo
<<code bash>>
PLATFORM_SDK $

git config --global user.name "Your Name"
git config --global user.email "you@example.com"

HABUILD_SDK $

sudo mkdir -p $ANDROID_ROOT
sudo chown -R $USER $ANDROID_ROOT
<</code>>

同步源并构建hal
<<code bash>>
HABUILD_SDK $

cd $ANDROID_ROOT
repo init -u git://github.com/mer-hybris/android.git -b hybris-sony-aosp-8.1.0_r35_20180714 -m tagged-manifest.xml
# Adjust X to your bandwidth capabilities
repo sync -jX --fetch-submodules
source build/envsetup.sh
export USE_CCACHE=1
lunch aosp_$DEVICE-userdebug
# Adjust XX to your building capabilities
make -jXX hybris-hal
<</code>>


== 校验交叉编译环境（Scratchbox2）

<<code bash>>
PLATFORM_SDK $

cd $HOME
cat > main.c << EOF
#include <stdlib.h>
#include <stdio.h>

int main(void) {
  printf("Hello, world!\n");
  return EXIT_SUCCESS;
}
EOF
sb2 -t $VENDOR-$DEVICE-$PORT_ARCH gcc main.c -o test
sb2 -t $VENDOR-$DEVICE-$PORT_ARCH ./test
<</code>>


== 打包 DROID HAL